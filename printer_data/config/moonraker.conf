#[include printcfg-moonraker.conf]
[include moonraker-printcfg.conf]

[server]
host: 0.0.0.0
port: 7125
# The maximum size allowed for a file upload (in MiB).  Default 1024 MiB
max_upload_size: 1024
# Path to klippy Unix Domain Socket
klippy_uds_address: ~/printer_data/comms/klippy.sock

[file_manager]
# post processing for object cancel. Not recommended for low resource SBCs such as a Pi Zero. Default False
enable_object_processing: True
# allow uploading gcode files to print
queue_gcode_uploads: True

[job_queue]
load_on_startup: True

[authorization]
force_logins: False
cors_domains:
    *.local
    *.lan
    *://app.fluidd.xyz
    https://my.mainsail.xyz
    http://my.mainsail.xyz
    http://*.local
    http://192.168.86.25
    http://mainsailos
    *://hephaestus.rootiest.dev
    *://printer.rootiest.dev
    *://*.rootiest.dev
    *://klippylyzer.github.io

trusted_clients:
    10.0.0.0/8
    100.0.0.0/8
    127.0.0.0/8
    127.0.0.1
    169.254.0.0/16
    172.16.0.0/12
    172.27.0.0/16
    192.168.0.0/16
    100.115.0.0/16
    FE80::/10
    ::1/128

# enables partial support of Octoprint API
[octoprint_compat]

# enables moonraker to track and store print history.
[history]

# this enables moonraker announcements for mainsail
[announcements]
subscriptions:
    mainsail

# enables spool management
[spoolman]
server: http://rootiest:7912
#   URL to the Spoolman instance. This parameter must be provided.
sync_rate: 5
#   The interval, in seconds, between sync requests with the
#   Spoolman server.  The default is 5.

[webcam AngryCam]
location: printer
icon: mdiWebcam
enabled: True
service: mjpegstreamer
target_fps: 15
target_fps_idle: 5
stream_url: /webcam?action=stream
snapshot_url: /webcam?action=snapshot
flip_horizontal: True
flip_vertical: True

[power Printer]
type: gpio
locked_while_printing: True
on_when_job_queued: True
bound_services: klipper
restart_klipper_when_powered: False
pin: gpio4
initial_state: off

# this enables moonraker's update manager
[update_manager]
refresh_interval: 168
enable_auto_refresh: True

#[update_manager mainsail]
#type: web
#channel: beta
#repo: mainsail-crew/mainsail
#path: ~/mainsail

[update_manager mainsail-config]
type: git_repo
primary_branch: master
path: ~/mainsail-config
origin: https://github.com/mainsail-crew/mainsail-config.git
managed_services: klipper

[update_manager KlipperScreen]
type: git_repo
channel: dev
path: ~/KlipperScreen
origin: https://github.com/jordanruthe/KlipperScreen.git
env: ~/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh
managed_services: KlipperScreen

### moonraker-timelapse
### Don't forget to include timelapse.cfg to your printer.cfg
### Uncomment to enable moonraker-timelapse

[update_manager timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services: klipper moonraker

[timelapse]
###   Directory where the generated video will be saved
output_path: ~/timelapse/
###   Directory where ffmpeg is installed
ffmpeg_binary_path: /usr/bin/ffmpeg

# CanBoot update manager
[update_manager katapult]
type: git_repo
path: /home/pi/CanBoot
origin: https://github.com/Arksine/CanBoot.git
is_system_service: False

# Crowsnest update_manager entry
[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
managed_services: crowsnest
install_script: tools/install.sh

# Sonar update_manager entry
[update_manager sonar]
type: git_repo
path: ~/sonar
origin: https://github.com/mainsail-crew/sonar.git
primary_branch: main
managed_services: sonar
install_script: tools/install.sh

[update_manager led_effect]
type: git_repo
path: ~/klipper-led_effect
origin: https://github.com/julianschill/klipper-led_effect.git
is_system_service: False

[update_manager extended_macro]
type: git_repo
primary_branch: main
path: ~/klipper_extras
origin: https://github.com/droans/klipper_extras.git
env: ~/klippy-env/bin/python
install_script: scripts/deps.sh #Moonraker only cares about the dependencies.
requirements: extended_macro/requirements/requirements-python3.txt
is_system_service: False
managed_services: klipper

[update_manager mobileraker]
type: git_repo
path: ~/mobileraker_companion
origin: https://github.com/Clon1998/mobileraker_companion.git
primary_branch:main
managed_services: mobileraker
env: ~/mobileraker-env/bin/python
requirements: scripts/mobileraker-requirements.txt
install_script: scripts/install-mobileraker-companion.sh

[update_manager voron-klipper-extensions]
type: git_repo
path: ~/voron-klipper-extensions
origin: https://github.com/voidtrance/voron-klipper-extensions.git
install_script: install-extensions.sh
managed_services: klipper

[update_manager klipper_tmc_autotune]
type: git_repo
channel: dev
path: ~/klipper_tmc_autotune
origin: https://github.com/andrewmcgr/klipper_tmc_autotune.git
managed_services: klipper
primary_branch: main

#[include octoeverywhere-system.cfg]

[update_manager fluidd-config]
type: git_repo
primary_branch: master
path: ~/fluidd-config
origin: https://github.com/fluidd-core/fluidd-config.git
managed_services: klipper

#[update_manager fluidd]
#type: web
#channel: stable
#repo: fluidd-core/fluidd
#path: ~/fluidd

[update_manager fluidd]
type: web
channel: stable
repo: fluidd-core/fluidd
path: ~/fluidd

[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail

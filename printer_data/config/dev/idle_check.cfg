
# Store the last state
[gcode_macro _idle_state]
variable_last_state: 'Ready'
gcode: # No gcode

# Check the idle state
[delayed_gcode idle_check]
initial_duration: 1
gcode:
    # Get the last state
    {% set last_state = printer['gcode_macro _idle_state'].last_state %}
    # Get the current state
    {% set current_state = printer.idle_timeout.state|string %}
    # Check the current state
    {% if current_state != 'Idle' and current_state != last_state %}
        # If the printer is not idle, turn on the lights
        #SET_LED LED=caselights RED=1.0 GREEN=1.0 BLUE=1.0 WHITE=1.0
        M118 Not Idle
    {% endif %}
    # Check if the last state is different from the current state
    {% if last_state != current_state %}
        # If the last state is different from the current state, store the current state
        SET_GCODE_VARIABLE MACRO=_idle_state VARIABLE=last_state VALUE='"{ current_state }"'
        M118 New State: { current_state }
    {% endif %}
    # Restart the delayed_gcode timer
    UPDATE_DELAYED_GCODE ID=idle_check DURATION=1
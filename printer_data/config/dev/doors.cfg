#####################################################################
#   Door Hinge Triggers
#####################################################################

### Door Variables ###
[gcode_macro _door_cfg]

variable_delay:           250                ; Debounce delay in miliseconds
variable_output:          118                ; Output M-command (117, 118, 116)

variable_open_light:      '_STATUS_BRIGHT'   ; LED macro for open doors
variable_print_light:     '_STATUS_PRINTING' ; LED macro for closed doors while printing
variable_ready_light:     '_STATUS_READY'    ; LED macro for closed doors while idle

variable_open_custom:     'M116'             ; Custom macro for open doors   (set to 'M116' to disable)
variable_closed_custom:   'M116'             ; Custom macro for closed doors (set to 'M116' to disable)

variable_debounce:        0                  ; <-- DO NOT CHANGE THIS VARIABLE
variable_state:           0                  ; <-- DO NOT CHANGE THIS VARIABLE
variable_bounce:          0                  ; <-- DO NOT CHANGE THIS VARIABLE
gcode: ; <-- leave empty
[gcode_button doors]

##########  IMPORTANT  ###########
# ------------------------------ #
# Set pin to match your machine: #
pin: !PG15                       # 
# ------------------------------ #
##########  IMPORTANT  ###########



################################ DO NOT CHANGE BELOW THIS LINE ################################
### ----------------------------------------------------------------------------------------###
#  Custom gcode/macros can be assigned using the 'open_custom' and 'closed_custom' variables  #               
### ----------------------------------------------------------------------------------------###
################################ DO NOT CHANGE BELOW THIS LINE ################################

press_gcode:
    _close_door door=1 ; DO NOT CHANGE
release_gcode:
    _open_door door=1  ; DO NOT CHANGE


[gcode_macro _open_door]
description: Door is opened
gcode:
    {% set doorcfg = printer['gcode_macro _door_cfg'] %}                                ; get doorcfg variables
    {% if doorcfg.debounce == 0 %}                                                      ; check debounce
        M{doorcfg.output|int} Door Open                                                 ; status output
        {doorcfg.open_light}                                                            ; open door LEDs
        {doorcfg.open_custom}                                                           ; open door custom macro
        SET_GCODE_VARIABLE MACRO=_door_cfg VARIABLE=debounce VALUE=1                    ; set debounce state
        SET_GCODE_VARIABLE MACRO=_door_cfg VARIABLE=state VALUE=1                       ; set door state
        SET_GCODE_VARIABLE MACRO=_door_cfg VARIABLE=bounce VALUE=1                      ; set door bounce
        UPDATE_DELAYED_GCODE ID=door_debounce DURATION={(doorcfg.delay / 1000)|float}   ; set debounce timer
    {% else %}                                                                          ; bounced
        SET_GCODE_VARIABLE MACRO=_door_cfg VARIABLE=bounce VALUE=1                      ; set door bounce
    {% endif %}

[gcode_macro _close_door]
description: Door is closed
gcode:
    {% set doorcfg = printer['gcode_macro _door_cfg'] %}                                ; get doorcfg variables
    {% if doorcfg.debounce == 0 %}                                                      ; check debounce
        M{doorcfg.output|int} Door Closed                                               ; status output
        {% if printer.virtual_sdcard.is_active == True %}                               ; printing state
            {doorcfg.print_light}                                                       ; closed door printing LEDs
        {% else %}                                                                      ; idle state
            {doorcfg.ready_light}                                                       ; closed door idle LEDs
        {% endif %}
        {doorcfg.closed_custom}                                                         ; closed door custom macro
        SET_GCODE_VARIABLE MACRO=_door_cfg VARIABLE=debounce VALUE=1                    ; set debounce state
        SET_GCODE_VARIABLE MACRO=_door_cfg VARIABLE=state VALUE=0                       ; set door state
        SET_GCODE_VARIABLE MACRO=_door_cfg VARIABLE=bounce VALUE=0                      ; set door bounce
        UPDATE_DELAYED_GCODE ID=door_debounce DURATION={(doorcfg.delay / 1000)|float}   ; set debounce timer
    {% else %}                                                                          ; bounced
        SET_GCODE_VARIABLE MACRO=_door_cfg VARIABLE=bounce VALUE=0                      ; set door bounce
    {% endif %}

[delayed_gcode door_debounce]
gcode:
    {% set doorcfg = printer['gcode_macro _door_cfg'] %}                                ; get doorcfg variables
    {% if doorcfg.bounce != doorcfg.state %}                                            ; check if a bounce ocurred
        {% if doorcfg.bounce == 1 %}                                                    ; bounced open
            SET_GCODE_VARIABLE MACRO=_door_cfg VARIABLE=state VALUE=1                   ; set door state
            SET_GCODE_VARIABLE MACRO=_door_cfg VARIABLE=bounce VALUE=1                  ; set door bounce
            M{doorcfg.output|int} Door Open                                             ; status output
            {doorcfg.open_light}                                                        ; open door LEDs
            {doorcfg.open_custom}                                                       ; open door custom macro
        {% else %}                                                                      ; bounced closed
            SET_GCODE_VARIABLE MACRO=_door_cfg VARIABLE=state VALUE=0                   ; set door state
            SET_GCODE_VARIABLE MACRO=_door_cfg VARIABLE=bounce VALUE=0                  ; set door bounce
            M{doorcfg.output|int} Door Closed                                           ; status output
            {% if printer.virtual_sdcard.is_active == True %}                           ; printing state
                {doorcfg.print_light}                                                   ; closed door printing LEDs
            {% else %}                                                                  ; idle state
                {doorcfg.ready_light}                                                   ; closed door idle LEDs
            {% endif %}
            {doorcfg.closed_custom}                                                     ; closed door custom macro
        {% endif %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_door_cfg VARIABLE=debounce VALUE=0                        ; reset debounce state



### STATUS OUTPUTS ###
# 
# Console output
# Use variable_output: 118
#[respond]
# 
# Display output
# Use variable_output: 117
#[display_status]
# 
# Silence output
# Use variable_output: 116
#[gcode_macro M116]
#escription: Silent status feedback
#gcode: ; <-- leave empty